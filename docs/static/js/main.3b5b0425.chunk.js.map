{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"0MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,MAAI,CAACL,MACxBC,EAAc,KAIb,SACC,uBAAOK,KAAK,OAAOC,SAbE,SAACJ,GACvBF,EAAcE,EAAEK,OAAOC,QAY0BA,MAAOT,O,8BCpBjDU,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEJI,MAAMF,GAFF,cAEhBG,EAFgB,gBAIDA,EAAIC,OAJH,uBAIfC,EAJe,EAIfA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATf,kBAedM,GAfc,4CAAF,sD,OCETO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACxB,EAA4BZ,mBAAS,IAArC,mBAEC,GAFD,UCJ2B,SAACY,GACzB,MAA0BZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeJ,OAVIC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAOG,EACPU,SAAQ,SAGlB,CAACpB,IAEAqB,EDVmBI,CAAazB,IAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QASb,OARAM,QAAQC,IAAIpB,EAAKa,GASf,qCACCA,GAAW,cACZ,6BAAKpB,IAEC,qBAAKgB,UAAU,YAAf,SAIIT,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEKTiB,EA7BM,WACjB,MAAoCxC,mBAAS,CAAC,gBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAOA,OACI,qCACJ,8CACI,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEK0C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCnBrB8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.3b5b0425.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  \r\n    const [inputValue, setInputValue] = useState(\"Hola mundo\")\r\n   \r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n        \r\n    }\r\n   \r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setCategories(cats => [inputValue]);\r\n       setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n         <input type=\"text\" onChange={handleInputChange} value={inputValue} />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    \r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","  export const getGifs= async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CLb39GyIt0q1SJ21VYsCF4Lawb7u7h66`;\r\n  const res = await fetch(url);\r\n\r\n  const {data} = await res.json();\r\n  const gifs = data.map(img=>{\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  // console.log(gifs);\r\n   //setImages(gifs);\r\n   return gifs;\r\n  } \r\n","import React from 'react'\r\n\r\nexport const GifGriditem = ({id,title,url}) => {\r\n   // console.log({id,title,url})\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n const [Images, setImages] = useState([]);\r\n\r\n  const {data, loading} = useFetchGifs(category);\r\n  console.log(data,loading)  \r\n  \r\n  // useEffect(()=>{\r\n    //   getGifs(category)\r\n    //   .then(setImages);\r\n    // },[category]) \r\n  \r\n\r\n  return (\r\n    <>\r\n    {loading && 'Cargando...'}\r\n    <h3>{category}</h3>\r\n\r\n        { <div className=\"card-grid\">\r\n          \r\n          \r\n            {\r\n              data.map((img) =>\r\n               <GifGriditem \r\n               key={img.id}\r\n               {...img}/>\r\n              )\r\n            }\r\n          \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(img =>{\r\n            setstate({\r\n                data : img,\r\n                loading:false\r\n            })\r\n        })\r\n    },[category]);\r\n\r\nreturn state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n   // const categories = ['One puch','Samurai','Dragon ball'];\r\n    \r\nconst GifExpertApp = () =>{\r\n    const [categories, setCategories] = useState(['Dragon ball']);\r\n\r\n  //  const handleAdd = () =>{\r\n    //    setCategories([...categories,\"Super Campeones\"]);\r\n   // }\r\n    \r\n    \r\n    return (\r\n        <>\r\n    <h2>GifExpertApp</h2>\r\n        <hr/>\r\n        <AddCategory setCategories={setCategories}/>\r\n        \r\n        <ol>\r\n            {\r\n             categories.map(category =>\r\n                <GifGrid \r\n                key={category}\r\n                category={category} />\r\n             )   \r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n\n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}